name: Continuous Integration and Backup

on:
  workflow_dispatch:  # Allow manual triggering

jobs:
  ci:
    name: Continuous Integration
    runs-on: blacksmith-4vcpu-ubuntu-2404

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Deno
      - name: Set Up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      # Step 3: Validate TypeScript files
      - name: TypeScript Type-Checking
        run: |
          deno lint --ext=ts . || echo "Linting completed with warnings"
          if [ -d "./marduk-ts" ]; then
            deno check ./marduk-ts/**/*.ts || echo "Type checking completed with warnings"
          else
            echo "marduk-ts directory not found, skipping type checking"
          fi

      # Step 4: Run Tests
      - name: Run Tests
        run: |
          if [ -d "./marduk-ts/tests" ]; then
            deno test ./marduk-ts/tests/ || echo "Tests completed with failures"
          else
            echo "Test directory not found, skipping tests"
          fi

  backup:
    name: Backup
    runs-on: blacksmith-4vcpu-ubuntu-2404
    needs: []  # Runs independently, regardless of CI status
  
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to avoid HEAD~1 issues
  
      # Step 2: Ensure Backup Branch Exists
      - name: Create or Checkout Backup Branch
        run: |
          git fetch origin backup-main || echo "Backup branch does not exist; creating a new one."
          if git show-ref --verify --quiet refs/heads/backup-main; then
            git checkout backup-main
          else
            git checkout -b backup-main
          fi
  
      # Step 3: Generate Timestamp for Artifact Name
      - name: Generate Timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date -u +'%Y-%m-%dT%H%M%S')" >> $GITHUB_ENV
  
      # Step 4: Backup Files to Backup Branch
      - name: Backup Files to Backup Branch
        run: |
          # Configure Git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Check for changes
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Backup: ${TIMESTAMP}" || echo "Nothing to commit"
            git push origin backup-main || echo "Failed to push to backup-main"
          else
            echo "No changes detected; skipping backup."
          fi
  
      # Step 5: Upload Backup as Artifact
      - name: Upload Backup as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backup-${{ env.TIMESTAMP }}
          path: ./marduk-ts  # Path to the backup directory
