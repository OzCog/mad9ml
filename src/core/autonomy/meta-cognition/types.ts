// Consider extracting this duplicated code into a shared function
// Consider extracting this duplicated code into a shared function
// Consider extracting this duplicated code into a shared function
// Consider extracting this duplicated code into a shared function
// Consider extracting this duplicated code into a shared function
// Consider extracting this duplicated code into a shared function

/**
 * Types for the Meta-Cognitive Reflection Engine
 * These types support self-analysis and improvement processes
 */

/**
 * Observation of a system's operation metrics and behaviors
 */
export interface SystemObservation {
  /** The subsystem being observed (memory, task, ai, autonomy) */
  subsystem: 'memory' | 'task' | 'ai' | 'autonomy';
  /** Metrics collected from the subsystem */
  metrics: Record<string, any>;
  /** When the observation was made */
  timestamp: string;
}

/**
 * Pattern identified in system behavior that might indicate
 * an optimization opportunity
 */
export interface ReflectionPattern {
  /** The type of pattern identified */
  type: string;
  /** Human-readable description of the pattern */
  description: string;
  /** Which subsystem the pattern was observed in */
  source: string;
  /** Confidence score (0-1) for the pattern recognition */
  confidence: number;
  /** Metrics related to this pattern */
  metrics: Record<string, any>;
}

/**
 * A concrete improvement suggestion generated by the meta-cognitive system
 */
export interface CognitiveImprovement {
  /** The type of pattern this improvement addresses */
  patternType: string;
  /** Description of the improvement including implementation steps */
  description: string;
  /** The original pattern that led to this improvement */
  sourcePattern: ReflectionPattern;
  /** How this improvement should be implemented */
  implementationStrategy: 'immediate' | 'scheduled' | 'task_sequence' | 'autonomy_update';
  /** Priority level for this improvement (1-5) */
  priority: number;
}

/**
 * A summary of the system's cognitive capabilities and current state
 */
export interface CognitiveCapabilities {
  /** Current capabilities of the memory system */
  memory: {
    /** How many items are stored in each memory type */
    itemCounts: Record<string, number>;
    /** How efficiently memory is being accessed (0-1) */
    accessEfficiency: number;
    /** How much available capacity is remaining */
    remainingCapacity: string;
  };
  
  /** Current capabilities of the task system */
  task: {
    /** How many tasks are currently scheduled */
    scheduledTasks: number;
    /** Average time to complete tasks */
    averageExecutionTime: number;
    /** How many tasks are completed per minute */
    throughput: number;
  };
  
  /** Current capabilities of the AI system */
  ai: {
    /** Which AI models are available */
    availableModels: string[];
    /** How many tokens have been used */
    tokenUsage: number;
    /** Average response time */
    averageResponseTime: number;
  };
  
  /** Current capabilities of the autonomy system */
  autonomy: {
    /** Whether self-improvement is actively running */
    selfImprovementActive: boolean;
    /** How many improvements have been implemented */
    improvementsImplemented: number;
    /** When the last improvement occurred */
    lastImprovement: string;
  };
}

/**
 * Results of a meta-cognitive improvement cycle
 */
export interface ImprovementCycleResults {
  /** How many observations were gathered */
  observationsCount: number;
  /** How many patterns were identified */
  patternsCount: number;
  /** How many improvements were generated */
  improvementsCount: number;
  /** How many improvement tasks were created */
  tasksCreated: number;
  /** When the improvement cycle ran */
  cycleTimestamp: string;
  /** How long the cycle took in ms */
  cycleDuration: number;
}
